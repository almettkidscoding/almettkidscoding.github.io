<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python for Beginners on Python programming</title>
    <link>/basics/</link>
    <description>Recent content in Python for Beginners on Python programming</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Wed, 18 Sep 2019 13:10:47 +0800</lastBuildDate>
    
	<atom:link href="/basics/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Turtle programming</title>
      <link>/basics/turtle_programming/</link>
      <pubDate>Wed, 18 Sep 2019 13:10:47 +0800</pubDate>
      
      <guid>/basics/turtle_programming/</guid>
      <description>Class objectives  Learn key syntax in turtle Draw the first turtle graphic Draw shapes in practice  Syntax table    Keyword description     import import statement is the most common way of invocking the required modules   star mark(*) stands for everything   forward(distance) Parameter: distance- is a number (integer or float). Move the turtle forward by the specified distance, in the direction the turtle is headed.</description>
    </item>
    
    <item>
      <title>Numbers, Strings, Operators</title>
      <link>/basics/numbers_strings_list/</link>
      <pubDate>Tue, 24 Sep 2019 15:24:05 +0800</pubDate>
      
      <guid>/basics/numbers_strings_list/</guid>
      <description>Class objectives  Key syntax introduction in this class Number String List How to do it in turtle? Homework  Syntax table    Keyword description     width(integer) Defines the width of the pen. Patameter - integer is a value type of int   if statement is a conditional statement.   for statement is a loop statement in which operations repeat itself for a limited amount of time    Number What is Number?</description>
    </item>
    
    <item>
      <title>Loops, If...else, List</title>
      <link>/basics/loops_conditionals_tuple/</link>
      <pubDate>Sun, 29 Sep 2019 20:43:07 +0800</pubDate>
      
      <guid>/basics/loops_conditionals_tuple/</guid>
      <description>Class objectives  Key syntax introduction in this class Brief introduction to List What is Loop statement? What is if&amp;hellip;else statement? Exercises with little turtle Homework  Syntax table    Keyword description     width(integer) Defines the width of the pen. Patameter - integer is a value type of int   if statement is a conditional statement.   for statement is a loop statement in which operations repeat itself for a limited amount of time    List What is List?</description>
    </item>
    
    <item>
      <title>Formatting, string and list slicing</title>
      <link>/basics/slicing_and_formatting/</link>
      <pubDate>Thu, 17 Oct 2019 19:31:39 +0800</pubDate>
      
      <guid>/basics/slicing_and_formatting/</guid>
      <description>Class objectives  Key syntax introduction String slicing and formatting How to add items to a List? List slicing More on list Homework  Syntax table    Keyword description     str.format() Perform a string formatting operation. The string on which this method is called can contain literal text or replacement fields delimited by braces {}. Each replacement field contains either the numeric index of a positional argument, or the name of a keyword argument.</description>
    </item>
    
    <item>
      <title>While and Function</title>
      <link>/basics/while_and_function/</link>
      <pubDate>Fri, 25 Oct 2019 13:52:51 +0800</pubDate>
      
      <guid>/basics/while_and_function/</guid>
      <description>Class objectives  Key syntax introduction How does while loop work? How to define a function? Define a function with default argument values Call a function in another function Yin Yang example of function calls Homework  Syntax table    Keyword description     def The keyword def introduces a function definition. It must be followed by the function name and the parenthesized list of formal parameters.</description>
    </item>
    
    <item>
      <title>Objects I</title>
      <link>/basics/objects_and_game_design_i/</link>
      <pubDate>Fri, 01 Nov 2019 14:25:57 +0800</pubDate>
      
      <guid>/basics/objects_and_game_design_i/</guid>
      <description>Class objectives  Key syntax introduction What is an object? Objects in game design Guessing game Homework  Syntax table    Keyword description     class A class is a code template for creating objects. Objects have member variables and have behaviour associated with them. In python a class is created by the keyword class. An object is created using the constructor of the class.    What is an object?</description>
    </item>
    
    <item>
      <title>Object II and Dictionary</title>
      <link>/basics/objects_ii_and_dictionary/</link>
      <pubDate>Fri, 08 Nov 2019 12:45:35 +0800</pubDate>
      
      <guid>/basics/objects_ii_and_dictionary/</guid>
      <description>Class objectives  Key syntax introduction Dictionary Looping techniques Students information system design Homework  Syntax table    Syntax Description     Dictionary It is best to think of a dictionary as a set of key: value pairs, with the requirement that the keys are unique (within one dictionary). A pair of braces creates an empty dictionary: {}. Placing a comma-separated list of key:value pairs within the braces adds initial key:value pairs to the dictionary; this is also the way dictionaries are written on output.</description>
    </item>
    
    <item>
      <title>Modules</title>
      <link>/basics/modules/</link>
      <pubDate>Fri, 15 Nov 2019 14:07:53 +0800</pubDate>
      
      <guid>/basics/modules/</guid>
      <description>Class objectives  Key syntax introduction Module Standard Modules Looking for more fun? Homework  Syntax table    Syntax Description     Module A module is a file containing Python definitions and statements.   Standard Modules Python comes with a library of standard modules, described in a separate document, the Python Library Reference (“Library Reference” hereafter). Some modules are built into the interpreter; these provide access to operations that are not part of the core of the language but are nevertheless built in, either for efficiency or to provide access to operating system primitives such as system calls.</description>
    </item>
    
    <item>
      <title>Input &amp; Output</title>
      <link>/basics/io/</link>
      <pubDate>Tue, 19 Nov 2019 18:44:02 +0800</pubDate>
      
      <guid>/basics/io/</guid>
      <description>Class objectives  Key syntax introduction Create a directory or directories Create a file Read and write file Classroom xercise Homework  Syntax table    Keyword description     mkdir A function to create a single directory, returns a directory object.   makedirs A function to create a multiple directories, returns a multiple nested directories.   open() open() returns a file object, and is most commonly used with two arguments: open(filename, mode).</description>
    </item>
    
    <item>
      <title>Wrap up Exercise - string</title>
      <link>/basics/wrap_up_exercise/</link>
      <pubDate>Thu, 28 Nov 2019 13:53:32 +0800</pubDate>
      
      <guid>/basics/wrap_up_exercise/</guid>
      <description>Class objectives  Key syntax introduction Basic Exercises String exercises Homework  Syntax table    Keyword description     replace(target_value, new_value) Python string method replace() returns a copy of the string in which the occurrences of old have been replaced with new, optionally restricting the number of replacements to max.   split() Python string method split() returns a list of all the words in the string, using str as the separator (splits on all whitespace if left unspecified), optionally limiting the number of splits to num.</description>
    </item>
    
    <item>
      <title>Wrap up Exercise - List</title>
      <link>/basics/wrapup_exercise_ii/</link>
      <pubDate>Thu, 05 Dec 2019 15:15:33 +0800</pubDate>
      
      <guid>/basics/wrapup_exercise_ii/</guid>
      <description>Class objectives  List Exercises More on Lists Most common List functions Homework  List Exercises Exercise 1: Print common items in two lists Given two empty lists lst1 and lst2. random.randint(1, 50) generates random numbers from 1 to 50. Randomly add 10 numbers to each empty list, write a function to print common items.
import random lst1 = [] lst2 = [] def randomly_add_items(lst1, lst2): def find_common_items(lst1, lst2):  Exercise 2: Remove duplicated items from a list Given a lst of integers.</description>
    </item>
    
  </channel>
</rss>
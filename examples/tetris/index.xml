<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tetris Game on Python programming</title>
    <link>/examples/tetris/</link>
    <description>Recent content in Tetris Game on Python programming</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Tue, 28 May 2019 20:38:27 +0800</lastBuildDate>
    
	<atom:link href="/examples/tetris/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Set up Tetris UI</title>
      <link>/examples/tetris/class01/</link>
      <pubDate>Wed, 08 May 2019 09:30:27 +0800</pubDate>
      
      <guid>/examples/tetris/class01/</guid>
      <description>Simply go over the previous class    Task Time     Quickly go through the Python basics we have already learned 10 mins    Step 1: Create a Python file tetris_game.py As we have already learned how to create a Python file, open Sublime text editor -&amp;gt; File -&amp;gt; New File -&amp;gt; press CTRL + S -&amp;gt; name the file as tetris_game.py
Step 2: Import required libraries Copy and Paste the code snippet below to import required libraries.</description>
    </item>
    
    <item>
      <title>Draw squares</title>
      <link>/examples/tetris/class02/</link>
      <pubDate>Tue, 21 May 2019 17:36:23 +0800</pubDate>
      
      <guid>/examples/tetris/class02/</guid>
      <description>Before today&amp;rsquo;s class    Task Time     Quickly go through the previous class 10 mins    In the previous class, we&amp;rsquo;ve set up the basic structure of the tetris game. In this class, we&amp;rsquo;re going to customize the game screen and add squares.
The customize version of the code import sys, random from PyQt5.QtWidgets import QMainWindow, QFrame, QDesktopWidget, QApplication, QHBoxLayout, QLabel from PyQt5.</description>
    </item>
    
    <item>
      <title>AI model integration</title>
      <link>/examples/tetris/class03/</link>
      <pubDate>Tue, 28 May 2019 20:38:27 +0800</pubDate>
      
      <guid>/examples/tetris/class03/</guid>
      <description>Tetris game architecture Following is the basic architecture of the tetris game. The game hierarchy is seperated to three layers:
 AI layer Basics layer Infrastructure layer  In this class, we will integrate our Tetris game with AI model.
Step 1: Create AI workflow  Under the same directory of tetris_game.py file create tetris_ai.py and copy/paste following code. This module leverages data and algorithms from the tetris_model.py file, helps us integrate the AI model with our general tetris game and make it smarter.</description>
    </item>
    
  </channel>
</rss>